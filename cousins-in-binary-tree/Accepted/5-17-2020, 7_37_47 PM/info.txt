{"id":340730606,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1589724467,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/340730606/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"11.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int find_HeightParent(TreeNode *curr,int &parent,int value,int height)\n    {\n        if(!curr)\n            return 0;\n        if(curr->val==value)\n            return height;\n        \n        parent = curr->val;\n        int left = find_HeightParent(curr->left,parent,value,height+1);\n        if(left)\n            return left;\n        parent = curr->val;\n        int right = find_HeightParent(curr->right,parent,value,height+1);\n        return right;\n    }\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        \n        if(root->val==x || root->val==y)\n            return false;\n            \n        int parent=-1;\n        int xHeight = find_HeightParent(root,parent,x,0);\n        \n        int yParent=-1;\n        int yHeight = find_HeightParent(root,yParent,y,0);\n        \n        if(parent!=yParent && xHeight==yHeight)\n            return true;        \n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false}