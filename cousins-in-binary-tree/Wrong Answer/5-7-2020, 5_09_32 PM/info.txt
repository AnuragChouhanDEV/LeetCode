{"id":335723277,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1588851572,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/335723277/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool sibling(TreeNode* root, int x, int y) {\n        if (root == NULL)\n            return false;\n        \n        return ((((root->left == NULL) ? 0: root->left->val == x) || ((root->right == NULL) ? 0: root->right->val == y)) ||\n                (((root->left == NULL) ? 0: root->left->val == y) || ((root->right == NULL) ? 0: root->right->val == x)) ||\n                sibling(root->left, x, y) || sibling(root->right, x, y));\n    }\n    int level(TreeNode* root, int x, int lev) {\n        if (root == NULL)\n            return 0;\n        \n        if (root->val == x)\n            return lev;\n        \n        int l = level(root->left, x, lev+1);\n        if (l != 0)\n            return l;\n        return level(root->right, x, lev+1);\n    }\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        if (root == NULL)\n            return 0;\n\n        printf(\"%d, %d\", level(root, x, 1), level(root, y, 1));\n        if (level(root, x, 1) == level(root, y, 1) && sibling(root, x, y)) {\n            return 1;\n        }\n        return 0;\n    }\n};","compare_result":"1101101010111110011100101111111111111110111101111111111011110011111101111111011111110101111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false}