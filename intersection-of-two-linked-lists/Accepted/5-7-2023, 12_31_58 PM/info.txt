{"id":945922698,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683442918,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/945922698/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int length(ListNode *head) {\n        int len = 0;\n        ListNode *tmp = head;\n        while(tmp) {\n            len++;\n            tmp = tmp->next;\n        }\n        return len;\n    }\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        int l1 = length(headA);\n        int l2 = length(headB);\n        int el;\n        ListNode *t1 = headA;\n        ListNode *t2 = headB;\n        if (l1 > l2) {\n            el = l1-l2;\n            while (el) {\n                t1 = t1->next;\n                el--;\n            }\n        } else {\n            el = l2-l1;\n            while (el) {\n                t2 = t2->next;\n                el--;\n            }\n        }\n        while (t1 && t2) {\n            if (t1 == t2)\n                return t1;\n            t1 = t1->next;\n            t2 = t2->next;\n        }\n        return NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false}