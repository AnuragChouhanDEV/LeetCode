{"id":958498563,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1685209030,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/958498563/","is_pending":"Not Pending","title":"Stone Game II","memory":"10.2 MB","code":"class Solution {\npublic:\n    int helper(vector<int>& piles, vector<int> &suff_sum, vector<vector<int>> &dp, int idx, int M) {\n        if (idx >= piles.size()) return 0;\n        if (idx + 2 * M >= piles.size()) return suff_sum[idx];\n        if (dp[idx][M] != 0) return dp[idx][M];\n        int result = INT_MIN;\n        for (int i = 1; i <= 2 * M; ++i) \n            result = max(result, suff_sum[idx] - helper(piles, suff_sum, dp, idx+i, max(i,M)));\n        return dp[idx][M] = result;\n    }\n    int stoneGameII(vector<int>& piles) {\n        if (piles.size() == 0) return 0;\n        vector<vector<int>> dp(piles.size(), vector<int> (piles.size(), 0));\n        vector<int> suff_sum(piles.size());\n        suff_sum[suff_sum.size()-1] = piles[piles.size()-1];\n        for (int i = suff_sum.size()-2; i >= 0; --i) {\n            suff_sum[i] = piles[i]+suff_sum[i+1];\n        }\n        return helper(piles, suff_sum, dp, 0, 1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-ii","has_notes":false}