{"id":952782383,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684422306,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/952782383/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* helper(ListNode* head, int k, int nodeleft) {\n        if (!head)\n            return NULL;\n        if (nodeleft < k)\n            return head;\n        ListNode* curr = head;\n        ListNode* next = NULL;\n        ListNode* prev = NULL;\n        int i = 0;\n        while (i < k && curr) {\n            next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;\n            ++i;\n        }\n        if (next)\n            head->next = helper(next, k, nodeleft-k);\n        return prev;\n    }\n    int length(ListNode *head) {\n        int len = 0;\n        ListNode *tmp = head;\n        while(tmp) {\n            len++;\n            tmp = tmp->next;\n        }\n        return len;\n    }\n\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        int len = length(head);\n        head = helper(head, k, len);\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false}