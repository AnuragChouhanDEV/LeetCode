{"id":961677039,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1685628287,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/961677039/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"N/A","code":"class Solution {\npublic:\n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        if (grid[0][0] == 1 || grid[grid.size()-1][grid.size()-1] == 1) return -1;\n\n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[0].size(); ++j) {\n                if (grid[i][j] == 1) grid[i][j] = 1000000;\n            }\n        }\n        grid[0][0] = 1;\n        for (int i = 0; i < grid.size(); ++i) {\n            for (int j = 0; j < grid[0].size(); ++j) {\n                if (i==0 && j == 0) {;continue;}\n                else if (i==0) { \n                    if (grid[i][j] == 0) grid[i][j] = 1+grid[i][j-1];}\n                else if (j==0) { \n                    if (grid[i][j] == 0) grid[i][j] = 1+grid[i-1][j];}\n                else {\n                    if (grid[i][j] == 0)\n                        grid[i][j] = 1+min(grid[i-1][j], min(grid[i][j-1], grid[i-1][j-1]));\n                }\n            }\n        }\n\n        return grid[grid.size()-1][grid.size()-1] ? grid[grid.size()-1][grid.size()-1]:-1;\n    }\n};","compare_result":"11111111111111111111111111111111110000011101101101001111111101100000001101111111011111111","title_slug":"shortest-path-in-binary-matrix","has_notes":false}