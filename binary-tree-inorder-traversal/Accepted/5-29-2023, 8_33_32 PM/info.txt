{"id":959659043,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1685372612,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/959659043/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        if (!root) return {};\n        vector<int> res;\n        TreeNode* curr = root;\n        while (curr) {\n            if (curr->left == NULL) {\n                res.push_back(curr->val);\n                curr = curr->right;\n            } else {\n                TreeNode* prev = curr->left;\n                while (prev->right && prev->right != curr) {\n                    prev = prev->right;\n                }\n                if (prev->right == NULL) {\n                    prev->right = curr;\n                    curr= curr->left;\n                } else {\n                    prev->right = NULL;\n                    res.push_back(curr->val);\n                    curr= curr->right;\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}