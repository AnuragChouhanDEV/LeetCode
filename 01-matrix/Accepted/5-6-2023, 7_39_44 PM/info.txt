{"id":945507752,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683382184,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/945507752/","is_pending":"Not Pending","title":"01 Matrix","memory":"33.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int R = mat.size();\n        int C = mat[0].size();\n        vector<vector<bool>> vis(R, vector<bool>(C, false));\n        vector<vector<int>> res(R, vector<int>(C, 0));\n        queue<pair<pair<int,int>, int>> q;\n        for (int i = 0; i < R; ++i) {\n            for (int j = 0; j < C; ++j) {\n                if (mat[i][j] == 0) {\n                    q.push({{i,j},0});\n                    vis[i][j] = true;\n                }\n            }\n        }\n        int dr[] = {0,1,-1,0};\n        int dc[] = {1,0,0,-1};\n        while (!q.empty()) {\n            int row = q.front().first.first;\n            int col = q.front().first.second;\n            int steps = q.front().second;\n            q.pop();\n            res[row][col] = steps;\n\n            for (int i = 0; i < 4; ++i) {\n                int r = row+dr[i];\n                int c = col+dc[i];\n                if (r >= 0 && c >= 0 && r < R && c < C && !vis[r][c]) {\n                    vis[r][c] = true;\n                    q.push({{r,c},steps+1});\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false}