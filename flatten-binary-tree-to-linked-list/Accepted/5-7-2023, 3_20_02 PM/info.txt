{"id":945991149,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683453002,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/945991149/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if(!root) return;\n        \n        TreeNode *tempLeft = root->left;\n        TreeNode *tempRight = root->right;\n        \n        root->left = NULL;\n        \n        flatten(tempLeft);\n        flatten(tempRight);\n        root->right = tempLeft;\n        TreeNode *current = root;\n        while(current->right != NULL) \n            current = current->right;\n        current->right = tempRight;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}