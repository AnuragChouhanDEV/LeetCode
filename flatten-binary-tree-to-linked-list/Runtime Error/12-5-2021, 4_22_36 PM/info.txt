{"id":597271220,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638701556,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/597271220/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if (!root || (!root->left && !root->right))\n            return;\n        if (root->left) {\n            flatten(root->left);\n            //cout << root->val << \" \";\n            TreeNode *right = root->right;\n            root->right = root->left;\n            root->left = NULL;\n            TreeNode *tmp = root->right;\n            while(tmp && tmp->right && tmp->right->val < right->val) {\n                tmp = tmp->right;\n            }\n            TreeNode *t = tmp->right;\n            tmp->right = right;\n            while (right->right)\n                right = right->right;\n            right->right = t;\n        }\n        flatten(root->right);\n    }\n};","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}