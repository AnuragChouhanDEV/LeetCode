{"id":597253156,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638697663,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/597253156/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *bst_util(vector<int> &nums, int start, int end) {\n        if (start > end)\n            return NULL;\n        int mid = (start + end)/2;\n        TreeNode *new_node = new TreeNode(nums[mid]);\n        if (start == end)\n            return new_node;\n        new_node->left = bst_util(nums, start, mid-1);\n        new_node->right = bst_util(nums, mid+1, end);\n        return new_node;\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return bst_util(nums, 0, nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false}