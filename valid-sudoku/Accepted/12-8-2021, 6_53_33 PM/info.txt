{"id":598853673,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638969813,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/598853673/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"19.9 MB","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        int len = board.size();\n        unordered_set<string> s;\n        for (int i = 0; i < len;++i) {\n            for (int j = 0; j < len;++j) {\n                if (board[i][j] == '.')\n                    continue;\n                string ch(1,board[i][j]);\n                string row = \"row\" + to_string(i) + ch;\n                string col = \"col\" + to_string(j) + ch;\n                string box = \"box\" + to_string(i/3) + to_string(j/3) + ch;\n                //cout << row << endl;\n                if (s.find(row) != s.end() || s.find(col) != s.end() || s.find(box) != s.end()) {\n                    return false;\n                } else {\n                    s.insert(row);\n                    s.insert(col);\n                    s.insert(box);\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false}