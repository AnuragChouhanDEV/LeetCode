{"id":343898074,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1590304239,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/343898074/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int in_order(TreeNode *root, int k) {\n        if (root == NULL)\n            return 0;\n        int left = in_order(root->left, k);\n        if (left)\n            return left;\n        k--;\n        if (!k)\n            return root->val;\n        int right = in_order(root->right, k);\n        return right;\n    }\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        return in_order(root, k);\n    }\n};","compare_result":"1011110100100100010000100001000001100000000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}