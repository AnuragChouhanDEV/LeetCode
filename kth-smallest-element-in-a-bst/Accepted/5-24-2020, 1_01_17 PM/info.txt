{"id":343905308,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1590305477,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/343905308/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void in_order(TreeNode *root, int k, int num[]) {\n        if (root == NULL)\n            return;\n        //cout << root->val << endl;\n        in_order(root->left, k, num);\n        if (++num[0] == k) {\n            num[1] = root->val;\n        }\n        in_order(root->right, k, num);\n        return;\n    }\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        int num[2] = {0};\n        in_order(root, k, num);\n        return num[1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}