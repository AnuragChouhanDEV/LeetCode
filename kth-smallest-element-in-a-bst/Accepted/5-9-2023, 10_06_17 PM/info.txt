{"id":947342199,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683650177,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/947342199/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void _kthSmallest(TreeNode* root, int k, int &count, int &res) {\n        if (!root)\n            return;\n        _kthSmallest(root->left, k, count, res);\n        count++;\n        if (count == k)\n            res = root->val;\n        if (res)\n            return;\n        _kthSmallest(root->right, k, count, res);\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        int res = 0;\n        int count = 0;\n        _kthSmallest(root, k, count, res);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}