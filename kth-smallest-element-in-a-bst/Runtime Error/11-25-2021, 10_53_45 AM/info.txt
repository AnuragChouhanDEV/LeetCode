{"id":592333359,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637817825,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/592333359/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *kthSmallestUtil(TreeNode* root, int k) {\n        if (!root)\n            return NULL;\n        TreeNode* left = kthSmallestUtil(root->left, k);\n        if (left != NULL)\n            return left;\n        k--;\n        if (k == 0)\n            return root;\n        return kthSmallestUtil(root->right, k);\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        TreeNode *node = kthSmallestUtil(root, k);\n        return node->val;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}