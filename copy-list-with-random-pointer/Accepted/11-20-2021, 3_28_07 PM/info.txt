{"id":589948280,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637402287,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/589948280/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if (!head)\n            return head;\n        Node *curr = head;\n        Node *next;\n        Node *copy;\n        while(curr) {\n            next = curr->next;\n            curr->next = new Node(curr->val);\n            curr->next->next = next;\n            curr = curr->next->next;\n        }\n        curr = head;\n        while(curr) {\n            curr->next->random = curr->random ? curr->random->next : NULL;\n            curr = curr->next->next;\n        }\n        curr = head;\n        copy = curr->next;\n        while(curr && curr->next) {\n            next = curr->next;\n            curr->next = next->next;\n            curr = curr->next;\n            if (next && curr)\n                next->next = curr->next;\n        }\n#if 0\n        curr = copy;\n        while(curr) {\n            cout << curr->val << \" \";\n            curr = curr->next;\n        }\n#endif\n        return copy;\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}