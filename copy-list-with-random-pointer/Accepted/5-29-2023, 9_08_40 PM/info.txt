{"id":959677654,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1685374720,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/959677654/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if (!head) return head;\n        Node *curr = head;\n        while (curr) {\n            Node *next = curr->next;\n            curr->next = new Node(curr->val);\n            curr->next->next = next;\n            curr = curr->next->next;\n        }\n        curr = head;\n        while (curr) {\n            Node *next = curr->next;\n            next->random = curr->random ? curr->random->next:NULL;\n            curr = curr->next->next;\n        }\n        curr = head;\n        Node* clonedHead = head->next;\n        Node* clonedCurr = clonedHead;\n        while (clonedCurr->next != NULL) {\n            curr->next = curr->next->next;\n            clonedCurr->next = clonedCurr->next->next;\n            curr = curr->next;\n            clonedCurr = clonedCurr->next;\n        }\n        curr->next = NULL;\n        clonedCurr->next = NULL;\n     \n        return clonedHead;\n/*\n        while (curr) {\n            cout << \" \" << curr->val;\n            curr = curr->next;\n        }\n*/\n\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}