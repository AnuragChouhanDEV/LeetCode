{"id":591870740,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637734514,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/591870740/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        if(!root) \n            return {};\n        vector<vector<int>> result;\n        queue<TreeNode*> Q;\n        Q.push(root);\n        int lvl = 0;\n        while(!Q.empty()){\n            int count = Q.size();\n            vector<int> level_nodes;\n            for(int i = 0; i < count; ++i){\n                TreeNode *node = Q.front();\n                Q.pop();\n                if (lvl%2 == 1) {\n                    if(node->left) Q.push(node->left);\n                    if(node->right) Q.push(node->right);\n                } else {\n                    if(node->right) Q.push(node->right);\n                    if(node->left) Q.push(node->left);\n                }\n                level_nodes.push_back(node->val);\n                lvl++;\n            }\n            result.push_back(level_nodes);\n        }\n        return result;\n    }\n};","compare_result":"111111001101101000001000000000000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}