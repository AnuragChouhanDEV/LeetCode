{"id":947351343,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683651146,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/947351343/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        if (!root)\n            return {};\n        vector<vector<int>> res;\n        queue<TreeNode*> q;\n        q.push(root);\n        bool flag = false;\n        while(!q.empty()) {\n            int size = q.size();\n            vector<int> vec;\n            for (int i = 0; i < size; ++i) {\n                TreeNode *tmp = q.front();\n                q.pop();\n                if (flag) {\n                    if (tmp->left) q.push(tmp->left);\n                    if (tmp->right) q.push(tmp->right);\n                } else {\n                    if (tmp->right) q.push(tmp->right);\n                    if (tmp->left) q.push(tmp->left);\n                }\n                vec.push_back(tmp->val);\n            }\n            flag = !flag;\n            res.push_back(vec);\n        }\n        return res;\n    }\n};","compare_result":"111111101101101000001000000100000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}