{"id":423877157,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1606281719,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/423877157/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertionSortList(ListNode* head) {\n        ListNode* tmp = head;\n        ListNode* prev = NULL;\n        ListNode* next = NULL;\n        ListNode* node = NULL;\n        if (tmp == NULL) {\n            return NULL;\n        }\n        if (tmp->next == NULL) {\n            return tmp;\n        }\n        while (!tmp->next) {\n            if (tmp->val <= tmp->next->val)\n                tmp = tmp->next;\n            else {\n                node = tmp->next;\n                prev = tmp;\n                tmp = tmp->next;\n                next = tmp->next;\n            }\n        }\n    }\n};","compare_result":null,"title_slug":"insertion-sort-list","has_notes":false}