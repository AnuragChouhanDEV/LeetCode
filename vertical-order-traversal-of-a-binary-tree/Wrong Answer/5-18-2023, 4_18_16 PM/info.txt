{"id":952656955,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684406896,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/952656955/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void _verticalTraversal(TreeNode* root, map<int, vector<int>> &ma, int idx) {\n        if (!root) return;\n        ma[idx].push_back(root->val);\n        _verticalTraversal(root->left, ma, idx-1);\n        _verticalTraversal(root->right, ma, idx+1);\n    }\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>> res;\n        map<int, vector<int>> ma;\n        _verticalTraversal(root, ma, 0);\n        for (auto it:ma) {\n            sort(it.second.begin(), it.second.end());\n            res.push_back(it.second);\n        }\n        return res;\n    }\n};","compare_result":"11111111111001101000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false}