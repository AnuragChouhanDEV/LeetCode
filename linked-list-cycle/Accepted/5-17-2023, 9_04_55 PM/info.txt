{"id":952150611,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684337695,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/952150611/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if (!head)\n            return false;\n        ListNode *sptr = head;\n        ListNode *fptr = head->next;\n        while (fptr && fptr->next) {\n            if (sptr == fptr)\n                return true;\n            sptr = sptr->next;\n            fptr = fptr->next->next;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false}