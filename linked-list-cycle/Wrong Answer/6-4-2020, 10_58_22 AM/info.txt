{"id":348801836,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591248502,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/348801836/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *curr = head;\n        int count = 0;\n\n        while(curr) {\n            ListNode *tmp = curr;\n            while(tmp) {\n                if (curr == tmp) \n                    return true;\n            }\n            curr = curr->next;\n            count++;\n        }\n        return false;\n    }\n};","compare_result":"11011001110111011","title_slug":"linked-list-cycle","has_notes":false}