{"id":592329364,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637817203,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/592329364/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"31.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        int count = 0;\n        if (!root)\n            return 0;\n        queue<TreeNode *> q;\n        q.push(root);\n        while (!q.empty()) {\n            TreeNode *node = q.front();\n            if (node)\n                count++;\n            q.pop();\n            if (node->left)\n                q.push(node->left);\n            if (node->right)\n                q.push(node->right);\n        }\n        return count;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false}