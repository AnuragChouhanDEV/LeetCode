{"id":597321291,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638712352,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/597321291/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int counter(TreeNode *root) {\n        if (!root)\n            return 0;\n        int ll = 1;\n        TreeNode *l = root->left;\n        while (l) {\n            ll++;\n            l = l->left;\n        }\n        int rl = 1;\n        TreeNode *r = root->right;\n        while (r) {\n            rl++;\n            r = r->right;\n        }\n        if (ll == rl) {\n            //cout << \n            return (1 << ll)-1;\n        }\n        \n        return (1 + counter(root->left) + counter(root->right));\n    }\n    int countNodes(TreeNode* root) {\n        return counter(root);\n#if 0\n        int count = 0;\n        if (!root)\n            return 0;\n        queue<TreeNode *> q;\n        q.push(root);\n        while (!q.empty()) {\n            TreeNode *node = q.front();\n            if (node)\n                count++;\n            q.pop();\n            if (node->left)\n                q.push(node->left);\n            if (node->right)\n                q.push(node->right);\n        }\n        return count;\n#endif\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false}