{"id":343917369,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1590307794,"status":10,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/343917369/","is_pending":"Not Pending","title":"Count Square Submatrices with All Ones","memory":"26.4 MB","code":"class Solution {\n    int min (int a, int b) {\n        return a > b ? b : a;\n    }\npublic:\n    int countSquares(vector<vector<int>>& matrix) {\n        int row = matrix.size();\n        if (!row)\n            return 0;\n        int col = matrix[0].size();\n        int sum = 0;\n        \n        vector<vector<int> > vec( row+1 , vector<int> (col+1));\n        for (int i = 0; i < row+1; ++i) {\n            for (int j = 0; j < col+1; ++j) {\n                if (i == 0 || j == 0) {\n                    vec[i][j] = 0;\n                } else if (i == 1 || j == 1) {\n                    vec[i][j] = matrix[i-1][j-1];\n                } else {\n                    if (matrix[i-1][j-1]) {\n                        vec[i][j] = 1 + min(min(vec[i-1][j],vec[i-1][j-1]), vec[i][j-1]);\n                    } else {\n                        vec[i][j] = 0;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < row+1; ++i) {\n            for (int j = 0; j < col+1; ++j) {\n                sum +=vec[i][j];\n                //cout << vec[i][j] << \" \";\n            }\n            //cout << endl;\n        }\n        //cout << sum << endl;\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"count-square-submatrices-with-all-ones","has_notes":false}