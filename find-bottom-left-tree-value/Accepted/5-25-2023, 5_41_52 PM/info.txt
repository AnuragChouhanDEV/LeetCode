{"id":957057446,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1685016712,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/957057446/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    int findBottomLeftValue(TreeNode* root) {\n        int res;\n        queue<TreeNode *> q;\n        q.push(root);\n        while (!q.empty()) {\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                TreeNode *tmp = q.front();\n                res = tmp->val;\n                q.pop();\n                if (tmp->right) q.push(tmp->right);\n                if (tmp->left) q.push(tmp->left);\n            }\n        }\n        return res;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value","has_notes":false}