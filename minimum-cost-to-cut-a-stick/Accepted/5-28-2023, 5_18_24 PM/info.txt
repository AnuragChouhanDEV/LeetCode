{"id":958957485,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1685274504,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/958957485/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"14.5 MB","code":"class Solution {\npublic:\n    int helper(int i, int n, vector<int>& cuts, int left, int right, vector<vector<int>> &dp) {\n        if (left > right) return 0;\n        if (dp[left][right] != -1) return dp[left][right];\n        int cost = INT_MAX;\n        for (int j = left; j <= right; ++j) {\n            int left_cost = helper(i, cuts[j], cuts, left, j-1, dp);\n            int right_cost = helper(cuts[j], n, cuts, j+1, right, dp);\n            int curr_cost = (n - i)+left_cost+right_cost;\n            cost = min(cost, curr_cost);\n        }\n        return dp[left][right] = cost;\n        \n    }\n    int minCost(int n, vector<int>& cuts) {\n        vector<vector<int>> dp(101, vector<int>(101, -1));\n        sort(cuts.begin(), cuts.end());\n        return helper(0, n, cuts, 0, cuts.size()-1, dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick","has_notes":false}