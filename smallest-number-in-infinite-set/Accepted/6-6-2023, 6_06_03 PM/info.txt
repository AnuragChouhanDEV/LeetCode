{"id":965143486,"lang":"cpp","lang_name":"C++","time":"3 days, 2 hours","timestamp":1686054963,"status":10,"status_display":"Accepted","runtime":"2452 ms","url":"/submissions/detail/965143486/","is_pending":"Not Pending","title":"Smallest Number in Infinite Set","memory":"78.4 MB","code":"class SmallestInfiniteSet {\npublic:\n    priority_queue<int, vector<int>, greater<int>> pq;\n    stack<int> st;\n    SmallestInfiniteSet() {\n        for (int i = 1; i <= 2000; ++i)\n            pq.push(i);\n    }\n    \n    int popSmallest() {\n        int i = pq.top();\n        pq.pop();\n        return i;\n    }\n    \n    void addBack(int num) {\n        //if (pq.top() <= num) return;\n        while (pq.top() < num) {\n            int i = pq.top();\n            pq.pop();\n            st.push(i);\n        }\n        if (pq.top() != num)\n            pq.push(num);\n        while (!st.empty()) {\n            int i = st.top();\n            st.pop();\n            pq.push(i);\n        }\n    }\n};\n\n/**\n * Your SmallestInfiniteSet object will be instantiated and called as such:\n * SmallestInfiniteSet* obj = new SmallestInfiniteSet();\n * int param_1 = obj->popSmallest();\n * obj->addBack(num);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-number-in-infinite-set","has_notes":false}