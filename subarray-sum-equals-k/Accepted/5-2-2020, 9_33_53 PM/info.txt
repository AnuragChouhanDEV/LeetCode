{"id":333256006,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1588435433,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/333256006/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"18.9 MB","code":"class Solution {\npublic:\n    int subarraySum(vector<int>& nums, int k) {\n        \n        //For fast I/O in C++\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        \n        int n = nums.size();\n        if(n==0)\n            return 0;\n        \n        unordered_map<int,int> mymap;   //Key = PrefixSUM, Value = Count of PrefixSUM.\n        int currSUM = 0;\n        int i = 0;\n        int count = 0;\n        \n        while(i<n)\n        {\n            currSUM += nums[i];\n            \n            if(currSUM == k)    //We found a new subArray with SUM = k\n                count += 1;\n            \n            if(mymap.find(currSUM-k)!=mymap.end())\n                count += mymap[currSUM-k];\n            \n            mymap[currSUM] += 1;\n            i += 1;\n        }\n        return count;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false}