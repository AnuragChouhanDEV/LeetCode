{"id":965180400,"lang":"cpp","lang_name":"C++","time":"3 days, 1 hour","timestamp":1686058869,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/965180400/","is_pending":"Not Pending","title":"Total Cost to Hire K Workers","memory":"N/A","code":"class Solution {\npublic:\n    struct comp {\n        bool operator()(const pair<int,int> &p1, const pair<int,int> &p2) {\n            if (p1.first != p2.first) {\n                return p1.first > p2.first;\n            } else {\n                return p1.second > p2.second;\n            }\n        }\n    };\n    long long totalCost(vector<int>& costs, int k, int candidates) {\n        long long total_cost = 0;\n        int n = costs.size()-1;\n        priority_queue<pair<int,int> , vector<pair<int,int>>, comp> p1;\n        int i = 0;\n        while (i < n && candidates) {\n            candidates--;\n            p1.push({costs[i],i});\n            p1.push({costs[n],n});\n            i++;\n            n--;\n        }\n\n        while(k && i <= n) {\n            k--;\n            auto p = p1.top();\n            p1.pop();\n            total_cost += p.first;\n            if (p.second < i) {\n                p1.push({costs[i],i});\n                i++;\n            } else {\n                p1.push({costs[n],n});\n                n--;\n            }\n        }\n        while(k && !p1.empty()) {\n            total_cost += p1.top().first;\n            p1.pop();\n            k--;\n        }\n        return total_cost; \n    }\n};","compare_result":"1111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"total-cost-to-hire-k-workers","has_notes":false}