{"id":955229295,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1684773037,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/955229295/","is_pending":"Not Pending","title":"N-Queens","memory":"7.2 MB","code":"class Solution {\npublic:\n    bool is_safe(int row, int col, vector<string> &board, int n) {\n        int tr = row;\n        int tc = col;\n        while (tr >= 0 && tc >= 0) {\n            if (board[tr][tc] == 'Q')\n                return false;\n            tr--;tc--;\n        }\n        tr = row;\n        tc = col;\n        while (tr >= 0 && tc >= 0) {\n            if (board[tr][tc] == 'Q')\n                return false;\n            tc--;\n        }\n        tr = row;\n        tc = col;\n        while (tr < n && tc >= 0) {\n            if (board[tr][tc] == 'Q')\n                return false;\n            tc--;\n            tr++;\n        }\n        return true;\n    }\n    void helper(int col, vector<vector<string>> &res, vector<string> &board, int n) {\n        if (col == n) {\n            res.push_back(board);\n            return;\n        }\n        for (int row = 0; row < n; ++row) {\n            if (is_safe(row, col, board, n)) {\n                board[row][col] = 'Q';\n                helper(col+1, res, board, n);\n                board[row][col] = '.';\n            }\n        }\n    }\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<string>> res;\n        vector<string> board(n);\n        string s(n,'.');\n        for (int i = 0; i < n; ++i) {\n            board[i]=s;\n        }\n        helper(0, res, board, n);\n        return res;\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false}