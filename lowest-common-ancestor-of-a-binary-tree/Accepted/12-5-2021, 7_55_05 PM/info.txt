{"id":597331896,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638714305,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/597331896/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n       if (root->val == p->val || root->val == q->val)\n           return root;\n        if (!root->left && !root->right)\n            return NULL;\n        TreeNode *left = NULL;\n        TreeNode *right = NULL;\n        if (root->left)\n            left = lowestCommonAncestor(root->left, p , q);\n        if (root->right)\n            right = lowestCommonAncestor(root->right, p , q);\n        if (left && right)\n            return root;\n        return left==NULL ? right : left;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}