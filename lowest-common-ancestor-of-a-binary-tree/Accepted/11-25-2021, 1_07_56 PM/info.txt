{"id":592385280,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637825876,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/592385280/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"17.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool find_path(TreeNode* root, int target, vector<TreeNode *> &path) {\n        if (!root)\n            return false;\n        path.push_back(root);\n        if (target == root->val)\n            return true;\n        if (find_path(root->left, target, path) || find_path(root->right, target, path))\n            return true;\n        path.pop_back();\n        return false;\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        vector<TreeNode *> p1, p2;\n        if (!find_path(root, p->val, p1) || !find_path(root, q->val, p2))\n            return NULL;\n        int i;\n#if 1\n        for (i = 0; i < p1.size() && i < p2.size(); ++i)\n            if (p1[i] != p2[i])\n                break;\n#endif\n        return p1[i-1];\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}