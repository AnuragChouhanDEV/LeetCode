{"id":962867272,"lang":"cpp","lang_name":"C++","time":"6 days, 5 hours","timestamp":1685783678,"status":10,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/962867272/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *prev;\n    int count = 0;\n    void cgn(TreeNode* root, int max) {\n        if (!root) return;\n        if (root->val >= max) {\n            count++;\n            cout << root->val << \" \"<<endl;\n            max = root->val;\n        }\n        cgn(root->left, max);\n        cgn(root->right, max);\n    }\n    int goodNodes(TreeNode* root) {\n        if (!root) return 0;\n        int max = root->val;\n        cgn(root, max);\n        return count;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}