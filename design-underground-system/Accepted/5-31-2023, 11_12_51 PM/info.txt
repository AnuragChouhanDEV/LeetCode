{"id":961111513,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1685554971,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/961111513/","is_pending":"Not Pending","title":"Design Underground System","memory":"58.8 MB","code":"class UndergroundSystem {\npublic:\n    unordered_map<int, pair<string,int>> cust;\n    unordered_map<string, pair<int,int>> sta;\n    UndergroundSystem() {\n        \n    }\n    \n    void checkIn(int id, string stationName, int t) {\n        cust[id] = {stationName, t};\n    }\n    \n    void checkOut(int id, string stationName, int t) {\n        if (cust.find(id) != cust.end()) {\n            string str = cust[id].first+\"to\"+stationName;\n            //cout << str << endl;\n            if (sta.find(str) == sta.end()) {\n                //cout << \"was here\" <<endl;\n                sta[str] = {t-cust[id].second, 1};\n            }\n            else {\n                int count = sta[str].second;\n                //cout << \"now here\" <<endl;\n                sta[str] = {t-cust[id].second+sta[str].first, count+1};\n            }\n        }\n        cust.erase(id);\n    }\n    \n    double getAverageTime(string startStation, string endStation) {\n        string str = startStation+\"to\"+endStation;\n        //cout << \"avg\" << str << endl;\n        //cout<< endl;\n        return (double) sta[str].first / (double) sta[str].second;\n    }\n};\n\n/**\n * Your UndergroundSystem object will be instantiated and called as such:\n * UndergroundSystem* obj = new UndergroundSystem();\n * obj->checkIn(id,stationName,t);\n * obj->checkOut(id,stationName,t);\n * double param_3 = obj->getAverageTime(startStation,endStation);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system","has_notes":false}