{"id":962974872,"lang":"cpp","lang_name":"C++","time":"6 days, 2 hours","timestamp":1685797146,"status":10,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/962974872/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"116.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *reverse (ListNode *head) {\n        ListNode *curr = head;\n        ListNode *next = NULL;\n        ListNode *prev = NULL;\n        while (curr) {\n            next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;\n        }\n        return prev;\n    }\n    int pairSum(ListNode* head) {\n        ListNode *sptr = head;\n        ListNode *fptr = head;\n        ListNode *prev;\n        while (fptr && fptr->next) {\n            prev = sptr;\n            sptr = sptr->next;\n            fptr = fptr->next->next;\n        }\n        prev->next = reverse(prev->next);\n        ListNode *h1 = head;\n        ListNode *h2 = prev->next;\n        int maxsum = INT_MIN;\n        while (h1 && h2) {\n            maxsum = max(maxsum, h1->val + h2->val);\n            h1 = h1->next;\n            h2 = h2->next;\n        }\n        return maxsum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false}