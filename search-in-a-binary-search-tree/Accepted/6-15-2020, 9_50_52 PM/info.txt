{"id":354054194,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1592238052,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/354054194/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    TreeNode* search(TreeNode* root, int val) {\n        if (root == NULL)\n            return NULL;\n        if (root->val == val)\n            return root;\n        if (root->val > val)\n            return search(root->left, val);\n        return search(root->right, val);\n    }\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        return search(root, val);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false}