{"id":354051306,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1592237549,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/354051306/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if (root == NULL)\n            return NULL;\n        if (root->val == val)\n            return root;\n        if (root->val > val)\n            return searchBST(root->left, val);\n        return searchBST(root->left, val);\n    }\n};","compare_result":"111110110001000001000000000000110011","title_slug":"search-in-a-binary-search-tree","has_notes":false}