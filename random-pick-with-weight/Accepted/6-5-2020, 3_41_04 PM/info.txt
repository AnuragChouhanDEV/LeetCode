{"id":349334477,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591351864,"status":10,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/349334477/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"40.6 MB","code":"class Solution {\n    vector<int> tot_arr;\n    int tot = 0;\n    #if 1\n    int bin_search(int x) \n    {\n        int l = 0, r = tot_arr.size(), m;\n        while (l < r) {\n            m = l + (r - l) / 2;\n            if (tot_arr[m] < x)\n                l = m +1;\n            else\n                r = m;\n        }\n        return l;\n    } \n    #endif\npublic:\n    Solution(vector<int>& w) {\n\n        for (int i = 0; i < w.size();++i) {\n           // cout << w[i] << endl;\n            tot += w[i];\n            tot_arr.push_back(tot);\n            \n            \n        }\n        //cout << tot << endl;\n    }\n    \n    int pickIndex() {\n        int ra = rand() % tot + 1;\n        return bin_search(ra);\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(w);\n * int param_1 = obj->pickIndex();\n */","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-weight","has_notes":false}