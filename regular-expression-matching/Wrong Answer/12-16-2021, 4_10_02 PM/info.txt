{"id":602662736,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1639651202,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/602662736/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool isMatch_(string s, string p, int s_idx, int p_idx) {\n        if (s_idx == s.size())\n            return true;\n        //cout << s_idx << \" \" << p_idx << endl;\n        if (s[s_idx] == p[p_idx])\n            isMatch_(s, p, s_idx+1, p_idx+1);\n        else if (p[p_idx] == '.')\n            isMatch_(s, p, s_idx+1, p_idx+1);\n        else if (p[p_idx] == '*') {\n            //cout << \" here\" <<endl;\n            if (p[p_idx-1] && (p[p_idx-1] == s[s_idx] || p[p_idx-1] == '.')) {\n                //cout << p[p_idx-1] << \" \" << p_idx-1 << \" \" << s[s_idx] << \" \" << s_idx << endl;\n                p.insert(p_idx, 1, p[p_idx-1]);\n                cout << p << endl;\n            }\n            isMatch_(s, p, s_idx, p_idx);\n        } else\n            return false;\n        //cout << \"got here\" << endl;\n        return true;\n    }\n    bool isMatch(string s, string p) {\n        if (p.size() > s.size())\n            return false;\n        return isMatch_(s, p, 0, 0);\n    }\n};","compare_result":"01100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"regular-expression-matching","has_notes":false}