{"id":962833253,"lang":"cpp","lang_name":"C++","time":"6 days, 7 hours","timestamp":1685779318,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/962833253/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void get_leaf_inorder(TreeNode* root, vector<int> &res) {\n        if (!root) return;\n\n        get_leaf_inorder(root->left, res);\n        if (!root->left && !root->right) {\n            res.push_back(root->val);\n            return;\n        }\n        get_leaf_inorder(root->right, res);\n    }\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        vector<int> res1;\n        vector<int> res2;\n        get_leaf_inorder(root1, res1);\n        get_leaf_inorder(root2, res2);\n        return res1==res2;\n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false}