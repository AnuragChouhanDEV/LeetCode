{"id":958403648,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1685201759,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/958403648/","is_pending":"Not Pending","title":"Kth Ancestor of a Tree Node","memory":"N/A","code":"class TreeAncestor {\npublic:\n    int size;\n    vector<int> arr;\n    TreeAncestor(int n, vector<int>& parent) {\n        size = n;\n        arr.resize(n);\n        for (int i = 0; i < n; ++i) arr[i]=parent[i];\n    }\n    \n    int getKthAncestor(int node, int k) {\n        for (int i = k-1; i >= 0; --i) {\n            if (arr[node] == -1)\n                return -1;\n            int tmp = arr[node];\n            node = tmp;\n        }\n        return node;\n    }\n};\n\n/**\n * Your TreeAncestor object will be instantiated and called as such:\n * TreeAncestor* obj = new TreeAncestor(n, parent);\n * int param_1 = obj->getKthAncestor(node,k);\n */","compare_result":"1111111100000000","title_slug":"kth-ancestor-of-a-tree-node","has_notes":false}