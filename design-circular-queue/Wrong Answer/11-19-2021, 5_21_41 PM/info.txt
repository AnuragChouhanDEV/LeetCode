{"id":589554653,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637322701,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/589554653/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"N/A","code":"class MyCircularQueue {\npublic:\n    int front;\n    int rear;\n    int capacity;\n    int *arr;\n    MyCircularQueue(int k) {\n        capacity = k;\n        front = -1;\n        rear = -1;\n        arr = new int[k];\n    }\n    \n    bool enQueue(int value) {\n        if (isFull())\n            return false;\n        if (isEmpty()) {\n            front = rear = 0;\n            arr[rear] = value;\n        } else {\n            arr[++rear] = value;\n        }\n        return true;\n    }\n    \n    bool deQueue() {\n        if (isEmpty())\n            return false;\n        ++front;\n        --rear;\n        return true;\n    }\n    \n    int Front() {\n        if (isEmpty())\n            return -1;\n        return arr[front];\n    }\n    \n    int Rear() {\n        if (isEmpty())\n            return -1;\n        return arr[rear];\n    }\n    \n    bool isEmpty() {\n        if (front == -1)\n            return true;\n        return false;\n    }\n    \n    bool isFull() {\n        if (rear == capacity-1)\n            return true;\n        return false;\n    }\n};\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue* obj = new MyCircularQueue(k);\n * bool param_1 = obj->enQueue(value);\n * bool param_2 = obj->deQueue();\n * int param_3 = obj->Front();\n * int param_4 = obj->Rear();\n * bool param_5 = obj->isEmpty();\n * bool param_6 = obj->isFull();\n */","compare_result":"1000000000000000000000000000000000000000000000000000000000","title_slug":"design-circular-queue","has_notes":false}