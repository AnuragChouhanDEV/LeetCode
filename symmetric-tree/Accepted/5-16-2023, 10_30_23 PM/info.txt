{"id":951552568,"lang":"cpp","lang_name":"C++","time":"3 weeks, 2 days","timestamp":1684256423,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/951552568/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool is_symmetric(TreeNode* left, TreeNode* right) {\n        if (!left || !right)\n            return left == right;\n        if (left->val != right->val) return false;\n        return is_symmetric(left->left, right->right) && is_symmetric(right->left, left->right);\n    }\n    bool isSymmetric(TreeNode* root) {\n        return (root == NULL || is_symmetric(root->left, root->right));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}