{"id":349405430,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591369382,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/349405430/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool symm(TreeNode* left, TreeNode* right) {\n        if(!left || !right)\n            return left==right;\n        if (left->val != right->val)\n            return false;\n        return symm(left->left, right->right) && symm(left->right, right->left);\n        \n    }\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if(!root)\n            return true;\n        return symm(root->left, root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}