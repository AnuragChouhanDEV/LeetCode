{"id":591821687,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637727483,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/591821687/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool is_mirror(TreeNode *left, TreeNode *right) {\n        if (!left && !right)\n            return true;\n        if (left && right && left->val == right->val) \n            return is_mirror(left->left, right->right) && is_mirror(left->right, right->left);\n        return false;\n    }\n    bool isSymmetric(TreeNode* root) {\n         return is_mirror(root,root);       \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}