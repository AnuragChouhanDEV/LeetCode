{"id":962992304,"lang":"cpp","lang_name":"C++","time":"6 days, 1 hour","timestamp":1685799355,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/962992304/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"32.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if (!root) return root;\n\n        if (root->val == key) {\n            if (!root->left && !root->right) return NULL;\n            else if (!root->left) return root->right;\n            else if (!root->right) return root->left;\n            TreeNode *tmp = root->right;\n            while(tmp->left) tmp=tmp->left;\n            root->val = tmp->val;\n            root->right = deleteNode(root->right, tmp->val);\n        } else if (root->val > key)\n            root->left = deleteNode(root->left, key);\n        else if (root->val < key)\n            root->right = deleteNode(root->right, key);\n        else \n            return root;\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false}