{"id":348789022,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591246424,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/348789022/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        \n        ListNode tmp;\n        ListNode *res = &tmp;\n        while(l1 && l2) {\n            \n            if (l1->val < l2->val) {\n                res->next = l1;\n                l1 = l1->next;\n                res = res->next;\n               // cout << l1->val << endl;\n            } else {\n               // cout << l2->val << endl;\n                res->next = l2;\n                l2= l2->next;\n                res = res->next;\n                \n            }\n        }\n        while (l1) {\n            res->next = l1;\n            l1 = l1->next;\n            res = res->next;\n        }\n        while (l2) {\n            res->next = l2;\n            l2= l2->next;\n            res = res->next;\n        }\n        return tmp.next;\n              \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}