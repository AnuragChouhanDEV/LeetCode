{"id":945899598,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683439810,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/945899598/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (!list1 && !list2)\n            return list1;\n        if (!list1)\n            return list2;\n        if (!list2)\n            return list1;\n        ListNode *head = list1->val < list2->val ? list1 : list2;\n        if (head == list1)\n            list1 = list1->next;\n        else\n            list2 = list2->next;\n        \n        ListNode *curr = head;\n        while (list1 && list2) {\n            if (list1->val < list2->val) {\n                curr->next = list1;\n                list1 = list1->next;\n            } else {\n                curr->next = list2;\n                list2 = list2->next;\n            }\n            curr = curr->next;\n        }\n        if (!list1)\n            curr->next = list2;\n        else\n            curr->next = list1;\n\n        return head;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}