{"id":948849333,"lang":"cpp","lang_name":"C++","time":"4Â weeks","timestamp":1683872223,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/948849333/","is_pending":"Not Pending","title":"Reorganize String","memory":"6.3 MB","code":"class Solution {\npublic:\n    class node {\n        public:\n        char key;\n        int freq;\n        node(int k,int f) {key = k;freq = f;}\n    };\n    string reorganizeString(string s) {\n        unordered_map<char, int> ma;\n        for (auto c:s)\n            ma[c]++;\n        auto cmp = [](node a,node b){return a.freq < b.freq;};\n        priority_queue<node, vector<node>, decltype(cmp)> pq(cmp);\n        for(auto it:ma) {\n            pq.push(node(it.first,it.second));\n        }\n        node g('$',-1);\n        string res = \"\";\n        while (!pq.empty()) {\n            node tmp = pq.top();\n            pq.pop();\n            res += tmp.key;\n            cout << res << endl;\n            tmp.freq--;\n            if (g.freq > 0) {\n                pq.push(g);\n            }\n            g=tmp;\n        }\n        if (s.size() == res.size())\n            return res;\n        return \"\";\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string","has_notes":false}