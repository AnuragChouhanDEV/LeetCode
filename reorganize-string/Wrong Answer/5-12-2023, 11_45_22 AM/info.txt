{"id":948848557,"lang":"cpp","lang_name":"C++","time":"4Â weeks","timestamp":1683872122,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/948848557/","is_pending":"Not Pending","title":"Reorganize String","memory":"N/A","code":"class Solution {\npublic:\n    class node {\n        public:\n        char key;\n        int freq;\n        node(int k,int f) {key = k;freq = f;}\n    };\n    string reorganizeString(string s) {\n        unordered_map<char, int> ma;\n        for (auto c:s)\n            ma[c]++;\n        auto cmp = [](node a,node b){return a.key > b.key;};\n        priority_queue<node, vector<node>, decltype(cmp)> pq(cmp);\n        for(auto it:ma) {\n            pq.push(node(it.first,it.second));\n        }\n        node g('$',-1);\n        string res = \"\";\n        while (!pq.empty()) {\n            node tmp = pq.top();\n            pq.pop();\n            res += tmp.key;\n            tmp.freq--;\n            if (g.freq > 0) {\n                pq.push(g);\n            }\n            g=tmp;\n        }\n        if (s.size() == res.size())\n            return res;\n        return \"\";\n    }\n};","compare_result":"1101110101100101111011101101101101101001011001001001001001011000001001","title_slug":"reorganize-string","has_notes":false}