{"id":959704277,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1685377728,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/959704277/","is_pending":"Not Pending","title":"Design Parking System","memory":"33.5 MB","code":"class ParkingSystem {\npublic:\n    int big_type;\n    queue<int> big_queue;\n    int medium_type;\n    queue<int> medium_queue;\n    int small_type;\n    queue<int> small_queue;\n    ParkingSystem(int big, int medium, int small) {\n        big_type = big;\n        medium_type = medium;\n        small_type = small;\n    }\n    \n    bool addCar(int carType) {\n        switch (carType) {\n            case 1:\n                if (big_queue.size() >= big_type)\n                    return false;\n                big_queue.push(1);\n                break;\n            case 2:\n                if (medium_queue.size() >= medium_type)\n                    return false;\n                medium_queue.push(1);\n                break;\n            case 3:\n                if (small_queue.size() >= small_type)\n                    return false;\n                small_queue.push(1);\n                break;\n            default:\n                return false;\n        }\n        return true;\n    }\n};\n\n/**\n * Your ParkingSystem object will be instantiated and called as such:\n * ParkingSystem* obj = new ParkingSystem(big, medium, small);\n * bool param_1 = obj->addCar(carType);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-parking-system","has_notes":false}