{"id":709942778,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1653847697,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/709942778/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"7.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    Node *_flatten(Node *head) {\n        if (!head)\n            return NULL;\n        Node *tail = head;\n        Node *curr = head;\n        while(curr) {\n            Node *next = curr->next;\n            Node *child = curr->child;\n            if (child) {\n                Node *_tail = _flatten(child);\n                _tail->next = next;\n                if (next)\n                    next->prev = _tail;\n                curr->next = child;\n                child->prev = curr;\n                curr->child = NULL;\n                curr = _tail;\n            } else {\n                curr = next;\n            }\n            if (curr)\n                tail = curr;\n        }\n        return tail;\n    }\n    Node* flatten(Node* head) {\n        if (head) _flatten(head);\n        return head;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list","has_notes":false}