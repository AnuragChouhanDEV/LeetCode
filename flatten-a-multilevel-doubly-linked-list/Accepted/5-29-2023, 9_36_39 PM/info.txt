{"id":959692200,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1685376399,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/959692200/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"7.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    Node* flatten(Node* head) {\n        stack<Node *> st;\n        Node *curr = head;\n        Node *tail;\n        \n        while (curr) {\n            if (curr->child) {\n                if (curr->next != NULL) {\n                    curr->next->prev = NULL;\n                    st.push(curr->next);\n                }\n                curr->next = curr->child;\n                curr->child->prev = curr;\n                curr->child = NULL;\n            }\n            tail = curr;\n            curr = curr->next;\n        }\n        while(!st.empty()) {\n            curr = st.top();\n            tail->next = curr;\n            curr->prev = tail;\n            st.pop();\n            while (curr) {\n                tail = curr;\n                curr = curr->next;\n            }\n        }\n        return head;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list","has_notes":false}