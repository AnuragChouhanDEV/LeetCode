{"id":354068861,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1592240693,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/354068861/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"11.1 MB","code":"class Solution {\n    void visit(vector<vector<int>>& adj, vector<vector<int>>& cost, int src, int dst, int K, int& fare, int tot_cost, vector<bool>& visited) {\n        if (K < -1)\n            return;\n        if (src == dst)\n            fare = min(fare, tot_cost);\n        visited[src] = true;\n        for (int i = 0; i < adj[src].size(); ++i) {\n            if (!visited[adj[src][i]] && (tot_cost + cost[src][adj[src][i]] <= fare)) \n                visit(adj, cost, adj[src][i], dst, K-1, fare, tot_cost+cost[src][adj[src][i]], visited);\n        }\n        visited[src] = false;\n    }\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {\n        vector<vector<int>> adj(n);\n        vector<vector<int>> cost(n+1, vector<int>(n+1));\n        \n        for (int i = 0; i < flights.size();++i) {\n            adj[flights[i][0]].push_back(flights[i][1]);\n            cost[flights[i][0]][flights[i][1]] = flights[i][2];\n        }\n        \n        vector<bool> visited(n+1, false);\n        int fare = INT_MAX;\n        visit(adj, cost, src, dst, K, fare, 0, visited);\n        if (fare == INT_MAX)\n            return -1;\n        return fare;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false}