{"id":949560262,"lang":"cpp","lang_name":"C++","time":"3 weeks, 6 days","timestamp":1683983261,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/949560262/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"13.6 MB","code":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        vector<pair<int,int>> vec[n];\n        for (auto it:flights)\n            vec[it[0]].push_back({it[1],it[2]});\n        queue<pair<int, pair<int,int>>> q;\n        // {stops, {node, cost}}\n        q.push({0,{src,0}});\n        vector<int> dest(n, 1e9);\n        dest[src] = 0;\n\n        while (!q.empty()) {\n            auto it = q.front();\n            q.pop();\n            int stops = it.first;\n            int node = it.second.first;\n            int cost = it.second.second;\n\n            if (stops > k) continue;\n            for (auto itr:vec[node]) {\n                int adjnode = itr.first;\n                int addcost = itr.second;\n\n                if (cost + addcost < dest[adjnode] && stops <= k) {\n                    dest[adjnode] = cost + addcost;\n                    q.push({stops+1,{adjnode, dest[adjnode]}});\n                }\n            }\n        }\n        return dest[dst] == 1e9 ? -1: dest[dst];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false}