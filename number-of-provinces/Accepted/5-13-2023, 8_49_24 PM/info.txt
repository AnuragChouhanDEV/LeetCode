{"id":949652308,"lang":"cpp","lang_name":"C++","time":"3 weeks, 5 days","timestamp":1683991164,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/949652308/","is_pending":"Not Pending","title":"Number of Provinces","memory":"14.4 MB","code":"class Solution {\npublic:\n    void helper(vector<vector<int>>& isConnected, int i, int j) {\n        isConnected[i][j] = 0;\n        for (int k = 0; k < isConnected.size(); ++k) {\n            if (isConnected[j][k])\n                helper(isConnected, j, k);\n        }\n    }\n    int findCircleNum(vector<vector<int>>& isConnected) {\n        int n = isConnected.size();\n        int max_province = 0;\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (isConnected[i][j]) {\n                    helper(isConnected, i, j);\n                    max_province++;\n                }\n            }\n        }\n        return max_province;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false}