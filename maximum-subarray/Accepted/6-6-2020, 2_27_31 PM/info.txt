{"id":349727490,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591433851,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/349727490/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"13.8 MB","code":"class Solution {\n    int max_(int a, int b) {\n        return a > b ? a : b;\n    }\npublic:\n    int maxSubArray(vector<int>& nums) {\n        vector<int> max_sum;\n        int max = nums[0];\n        max_sum.push_back(nums[0]);\n        for (int i = 1; i < nums.size();++i) {\n            max_sum.push_back(max_(nums[i],nums[i]+max_sum.back()));\n            max = max_(max_sum[i], max);\n            cout << max <<\" \" << max_sum[i] << endl;\n        }\n        return max;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false}