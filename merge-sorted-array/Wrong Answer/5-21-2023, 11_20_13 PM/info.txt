{"id":954642599,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1684691413,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/954642599/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        if (n == 0) return;\n        if (m == 0) {\n            nums1.resize(n);\n            for (int i = 0; i < n; ++i)\n                nums1[i] = nums2[i];\n            return;\n        }\n        m = m+n;\n        nums1.resize(m);\n        for (int i = m-n,j=0; i < m; ++i,++j) {\n            nums1[i] = nums2[j];\n            cout << nums1[i] << \" \";\n        }\n        // 4,5,6,1,2,3\n        // 1,5,6,4,2,3\n        // 1,4,6,5,2,3\n        // 1,2,6,5,4,3\n        // 1,2,4,5,6,3\n        // 1,2,3,5,6,4\n        \n        int left = 0;\n        int right = m-n;\n        while (left < m-n && right < m) {\n            //cout << \" left \" << left << \" right \"<<right<<endl;\n            if (nums1[left] <= nums1[right]) \n                left++;\n            else if (nums1[left] > nums1[right])\n                swap(nums1[left], nums1[right++]);\n        }\n        \n    }\n};\n\n\n// 1 2 3 0 0 0      2 5 6\n// 1 2 3 6 5 2\n// 1 2 2 3 5 6\n\n/*\nwhile (left < m-n && right < m) {\n    if left <= right\n    left++;\n    else \n    swap\n}\n*/","compare_result":"11111111100111010000001001000001000000000000000000000001100","title_slug":"merge-sorted-array","has_notes":false}