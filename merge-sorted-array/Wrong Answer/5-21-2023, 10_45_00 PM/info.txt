{"id":954624098,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1684689300,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/954624098/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        if (n == 0) return;\n        if (m == 0) {\n            nums1.resize(n);\n            for (int i = 0; i < n; ++i)\n                nums1[i] = nums2[i];\n            return;\n        }\n        m = m+n;\n        nums1.resize(m);\n        for (int i = m-n; i < m; ++i) {\n            nums1[i] = nums2[m-i-1];\n        }\n        \n        int left = 0;\n        int right = m-1;\n        while (left < right) {\n            //cout << \" left \" << left << \" right \"<<right<<endl;\n            if (nums1[left] <= nums1[right]) left++;\n            else swap(nums1[left], nums1[right]);\n        }\n        \n    }\n};\n\n\n// 1 2 3 0 0 0      2 5 6\n// 1 2 3 6 5 2\n// 1 2 2 3 5 6\n\n/*\nwhile (left < m-n && right < m) {\n    if left <= right\n    left++;\n    else \n    swap\n}\n*/","compare_result":"11111101101010010000101100100001000000000000000000000001101","title_slug":"merge-sorted-array","has_notes":false}