{"id":954647804,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1684692017,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/954647804/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"9 MB","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        if (n == 0) return;\n        if (m == 0) {\n            nums1.resize(n);\n            for (int i = 0; i < n; ++i)\n                nums1[i] = nums2[i];\n            return;\n        }\n        /*\n        m = m+n;\n        nums1.resize(m);\n        for (int i = m-n,j=0; i < m; ++i,++j) {\n            nums1[i] = nums2[j];\n        }\n        */\n        \n        int i = m-1;\n        int j = n-1;\n        int idx = m+n-1;\n        while (i >= 0 && j>=0) {\n            if (nums1[i] >= nums2[j]) {\n                nums1[idx--] = nums1[i--];\n            } else {\n                nums1[idx--] = nums2[j--];\n            }\n        }\n        while (j>=0) {\n            nums1[idx--] = nums2[j--];\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array","has_notes":false}