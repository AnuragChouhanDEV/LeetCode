{"id":946632301,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683552063,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/946632301/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"N/A","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        vector<int> leftarray(heights.size(), 0);\n        vector<int> rightarray(heights.size(), 0);\n        stack<int> st_idx;\n        int res = 0;\n        for (int i = 0; i < heights.size(); ++i) {\n            if (!st_idx.empty() && heights[st_idx.top()] > heights[i])\n                st_idx.pop();\n            if (st_idx.empty())\n                leftarray[i] = 0;\n            else\n                leftarray[i] = st_idx.top() + 1;\n            st_idx.push(i);\n        }\n        while (!st_idx.empty())\n            st_idx.pop();\n        for (int i = heights.size()-1; i >= 0; --i) {\n            if (!st_idx.empty() && heights[st_idx.top()] > heights[i])\n                st_idx.pop();\n            if (st_idx.empty())\n                rightarray[i] = heights.size()-1;\n            else\n                rightarray[i] = st_idx.top() - 1;\n            st_idx.push(i);\n        }\n        for (int i = 0; i < heights.size(); ++i) {\n            res = max(res, (rightarray[i] - leftarray[i] + 1) * heights[i]);\n        }\n        return res;\n    }\n};","compare_result":"11111101111111101111011111100011000111110011001000100001010000010000000001000000001100000000000000","title_slug":"largest-rectangle-in-histogram","has_notes":false}