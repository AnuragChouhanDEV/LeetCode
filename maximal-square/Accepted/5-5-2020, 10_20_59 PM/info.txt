{"id":334862212,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1588697459,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/334862212/","is_pending":"Not Pending","title":"Maximal Square","memory":"11.6 MB","code":"class Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        int largest = 0;\n        \n        int rows = matrix.size();\n        if(rows==0)\n            return 0;\n        int cols = matrix[0].size();\n        \n        vector<vector<int>> dp(rows+1,vector<int>(cols+1,0));\n        \n        for(int i=1;i<=rows;++i)\n        {\n            for(int j=1;j<=cols;++j)\n            {\n                if(matrix[i-1][j-1]=='1')\n                {\n                    dp[i][j] = 1 + min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]));\n                    if(largest < dp[i][j])\n                        largest = dp[i][j];\n                }\n            }\n        }\n        return largest*largest;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false}