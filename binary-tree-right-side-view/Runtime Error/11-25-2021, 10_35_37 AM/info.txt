{"id":592326483,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637816737,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/592326483/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        queue<TreeNode *> q;\n        q.push(root);\n        while(!q.empty()) {\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                TreeNode *node = q.front();\n                 q.pop();\n                if (i == 0)\n                    res.push_back(node->val);\n                if (node->right)\n                    q.push(node->right);\n                if (node->left)\n                    q.push(node->left);\n            }\n            \n        }\n        return res;\n    }\n};","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-right-side-view","has_notes":false}