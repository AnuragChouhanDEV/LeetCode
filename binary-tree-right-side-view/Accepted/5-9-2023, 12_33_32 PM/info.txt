{"id":947090952,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683615812,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/947090952/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root, vector<int> &res, int height) {\n        if (!root)\n            return;\n        if (height > res.size())\n            res.push_back(root->val);\n        helper(root->right, res, height+1);\n        helper(root->left, res, height+1);\n    }\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        helper(root, res, 1);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false}