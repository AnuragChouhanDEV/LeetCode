{"id":597315344,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638711233,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/597315344/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode *root, vector<int> &res, int max) {\n        if (!root)\n            return;\n        if (max > res.size())\n            res.push_back(root->val);\n        inorder(root->right, res, max+1);\n        inorder(root->left, res, max+1);\n    }\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        int max = 1;\n        inorder(root, res, max);\n        return res;\n#if 0\n        vector<int> res;\n        if (!root)\n            return res;\n        queue<TreeNode *> q;\n        q.push(root);\n        while(!q.empty()) {\n            int size = q.size();\n            for (int i = 0; i < size; ++i) {\n                TreeNode *node = q.front();\n                 q.pop();\n                if (i == 0)\n                    res.push_back(node->val);\n                if (node->right)\n                    q.push(node->right);\n                if (node->left)\n                    q.push(node->left);\n            }\n            \n        }\n        return res;\n#endif\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false}