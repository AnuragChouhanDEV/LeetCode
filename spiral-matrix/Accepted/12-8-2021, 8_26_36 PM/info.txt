{"id":598884834,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638975396,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/598884834/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.9 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int top = 0;\n        int bottom = matrix.size();\n        int left = 0;\n        int right = matrix[0].size();\n        vector<int> res;\n        while (left < right && top < bottom) {\n            for (int i = left; i < right; ++i)\n                res.push_back(matrix[top][i]);\n            top++;\n            \n            for (int j = top; j < bottom; ++j)\n                res.push_back(matrix[j][right-1]);\n            right--;\n            \n            //cout << left << \" \" << right << \" \" << top << \" \" << bottom << endl;\n            if (left >= right || top >= bottom)\n                break;\n//res.push_back(25);\n            for (int i = right-1; i >= left; --i)\n                res.push_back(matrix[bottom-1][i]);\n            bottom--;\n            \n            \n//res.push_back(20);\n            for (int j = bottom-1; j >= top; --j)\n                res.push_back(matrix[j][left]);\n            left++;\n\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false}