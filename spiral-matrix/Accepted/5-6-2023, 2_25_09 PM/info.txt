{"id":945392843,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683363309,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/945392843/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.8 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        vector<int> res;\n        int R = matrix.size();\n        if (R == 0) {\n            return {};\n        }\n        int C = matrix[0].size();\n        int i = 0;\n        int j = 0;\n        while (i < R && j < C) {\n            for (int k = j; k < C; ++k) {\n                res.push_back(matrix[i][k]);\n            }++i;\n            for (int k = i; k < R; ++k) {\n                res.push_back(matrix[k][C-1]);\n            }--C;\n            if (i < R) {\n                for (int k = C-1; k >=j; --k) {\n                    res.push_back(matrix[R-1][k]);\n                }\n                R--;\n            }\n            if (j < C) {\n                for (int k = R-1; k >= i; --k) {\n                    res.push_back(matrix[k][j]);\n                }\n                j++;\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false}