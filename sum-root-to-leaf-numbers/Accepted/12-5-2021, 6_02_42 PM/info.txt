{"id":597297728,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638707562,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/597297728/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void find_numbers(TreeNode* root, int val, int& result) {\n        int curr = val*10 + root->val;\n        if(!root->left && !root->right){\n            result += curr;\n            return;\n        }\n        if(root->left) find_numbers(root->left, curr, result);\n        if(root->right) find_numbers(root->right, curr, result);\n    }\n    int sumNumbers(TreeNode* root) {\n        if (!root) return 0;\n        int result = 0;\n        find_numbers(root, 0, result);\n        return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false}