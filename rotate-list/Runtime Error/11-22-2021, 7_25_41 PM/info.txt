{"id":590991361,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637589341,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/590991361/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        ListNode *sp = head;\n        ListNode *fp = head;\n        while (sp && k--) {\n            sp = sp->next;\n        }\n        //cout << sp->val << endl;\n        while (sp->next) {\n            sp = sp->next;\n            fp = fp->next;\n        }\n        //cout << fp->val << endl;\n        ListNode *new_head = sp = fp->next;\n        fp->next = NULL;\n        while (sp->next) {\n            sp = sp->next;\n        }\n        sp->next = head;\n        return new_head;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list","has_notes":false}