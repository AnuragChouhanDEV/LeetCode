{"id":947043246,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683609559,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/947043246/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root, int &maxi) {\n        if (!root)\n            return 0;\n        int left = helper(root->left, maxi);\n        int right = helper(root->right, maxi);\n        maxi = max(maxi, (left+right+root->val));\n        return root->val + max(left,right);\n    }\n    int maxPathSum(TreeNode* root) {\n        int maxi = INT_MIN;\n        helper(root, maxi);\n        return maxi;\n    }\n};","compare_result":"11111101100110110111110111111100110111000011001111010101001111111111011000111101111111011111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false}