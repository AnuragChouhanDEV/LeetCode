{"id":597295363,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638707018,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/597295363/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"39.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> max_path_sum_util(TreeNode *root) {\n        if (!root)\n            return vector<int>{0, INT_MIN};\n        vector<int> l_sum = max_path_sum_util(root->left);\n        int l_branch = l_sum[0];\n        int l_path = l_sum[1];\n        vector<int> r_sum = max_path_sum_util(root->right);\n        int r_branch = r_sum[0];\n        int r_path = r_sum[1];\n        \n        int max_of_l_r = max(r_branch, l_branch);\n        int max_branch = max(root->val, max_of_l_r + root->val);\n        int max_sum_root = max(max_branch, l_branch + root->val+ r_branch);\n        int max_path = max(max(max_sum_root,l_path), r_path);\n        \n        return vector<int>{max_branch, max_path};\n    }\n    int maxPathSum(TreeNode* root) {\n        vector<int> vec = max_path_sum_util(root);\n        return vec[1];        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false}