{"id":589579091,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637328605,"status":10,"status_display":"Accepted","runtime":"716 ms","url":"/submissions/detail/589579091/","is_pending":"Not Pending","title":"Design HashSet","memory":"327.4 MB","code":"class MyHashSet {\npublic:\n    vector<vector<int>> bucket;\n    int bucket_size;\n    int hf(int key) {\n        return key%bucket_size;\n    }\n    MyHashSet() {\n        bucket_size = 1000000;\n        bucket = vector<vector<int>> (bucket_size, vector<int>{});\n    }\n    \n    void add(int key) {\n        int i = hf(key);\n        if (find(bucket[i].begin(), bucket[i].end(), key) == bucket[i].end())\n            bucket[i].push_back(key);\n    }\n    \n    void remove(int key) {\n        int i = hf(key);\n        auto it = find(bucket[i].begin(), bucket[i].end(), key);\n        if (it != bucket[i].end())\n            bucket[i].erase(it);\n    }\n    \n    bool contains(int key) {\n        int i = hf(key);\n        if (find(bucket[i].begin(), bucket[i].end(), key) == bucket[i].end())\n            return false;\n        return true;\n    }\n};\n\n/**\n * Your MyHashSet object will be instantiated and called as such:\n * MyHashSet* obj = new MyHashSet();\n * obj->add(key);\n * obj->remove(key);\n * bool param_3 = obj->contains(key);\n */","compare_result":"11111111111111111111111111111111","title_slug":"design-hashset","has_notes":false}