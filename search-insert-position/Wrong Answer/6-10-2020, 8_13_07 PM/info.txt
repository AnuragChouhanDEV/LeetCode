{"id":351763875,"lang":"cpp","lang_name":"C++","time":"2 years, 12 months","timestamp":1591800187,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/351763875/","is_pending":"Not Pending","title":"Search Insert Position","memory":"N/A","code":"class Solution {\n    int b_search(vector<int>& nums, int left, int right, int target) {\n        int mid;\n        if (right > left) { \n            cout << left << \" \" << right << endl;\n            mid = left + (right - left) / 2; \n\n            if (nums[mid] == target) \n                return mid; \n\n            if (nums[mid] > target) \n                return b_search(nums, left, mid - 1, target); \n \n            return b_search(nums, mid + 1, right, target); \n        } else\n        return left+1;\n    }\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        int len = nums.size();\n        if (target < nums[0])\n            return 0;\n        if (target == nums[0])\n            return 1;\n        return b_search(nums, 0, len - 1, target);\n    }\n};","compare_result":"11111011000110110011010101110001011100100000111110111101100111","title_slug":"search-insert-position","has_notes":false}