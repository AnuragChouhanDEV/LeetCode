{"id":582962931,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1636213969,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/582962931/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"10.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* prev = head;\n        ListNode* slow = head;\n        ListNode* fast = head;\n        int  t = n;\n           \n        while (fast && t--) {\n            //cout << fast->val << endl;\n            fast = fast->next;\n        }\n        if (n == 1 && fast == NULL) {\n            delete head;\n            return NULL;\n        }\n        if (fast == NULL) {\n            ListNode *temp = slow;\n            head = slow->next;\n            delete temp;\n            return head;\n        }\n        //cout <<  fast->val << endl;\n        while (fast) {\n            //cout << fast->val << endl;\n            prev = slow;\n            slow = slow->next;\n            fast = fast->next;\n        }\n        \n        ListNode *temp = prev->next;\n        prev->next = slow->next;\n        delete temp;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false}