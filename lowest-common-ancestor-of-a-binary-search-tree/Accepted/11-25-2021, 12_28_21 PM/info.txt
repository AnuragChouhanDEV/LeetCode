{"id":592370446,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637823501,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/592370446/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (!root)\n            return NULL;\n        if (p->val > root->val && q->val > root->val)\n            return lowestCommonAncestor(root->right, p, q);\n        if (p->val < root->val && q->val < root->val)\n            return lowestCommonAncestor(root->left, p, q);\n        return root; \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}