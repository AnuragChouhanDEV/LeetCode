{"id":948470382,"lang":"cpp","lang_name":"C++","time":"4 weeks, 1 day","timestamp":1683815959,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/948470382/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Solution {\npublic:\n    void find_word(int R, int C, int idx, vector<vector<bool>>& visited, string &word, unordered_set<string> &res, vector<vector<char>>& board, int x, int y) {\n        if (x < 0 || y < 0 || x >= R || y >= C || visited[x][y] )\n            return;\n        if (idx == word.size()) {\n            res.insert(word);\n            return;\n        }\n\n        if (word[idx] == board[x][y]) {\n\n            visited[x][y] = 1;\n            if (x > 0) find_word(R, C, idx+1, visited, word, res, board, x-1, y);\n            if (y > 0) find_word(R, C, idx+1, visited, word, res, board, x, y-1);\n            if (x < R) find_word(R, C, idx+1, visited, word, res, board, x+1, y);\n            if (y < C) find_word(R, C, idx+1, visited, word, res, board, x, y+1);\n        }\n\n    }\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        unordered_set<string> res;\n        \n        int R = board.size();\n        int C = board[0].size();\n        \n        for (auto word:words) {\n            vector<vector<bool>> visited(R, vector<bool> (C, 0));\n\n            for (int i = 0; i < R; ++i) {\n                for (int j = 0; j < C; ++j) {\n                    //cout << \"word[0] \" <<word[0] << endl;\n                    if (word[0] == board[i][j])\n                        find_word(R, C, 0, visited, word, res, board, i, j);\n                }\n            }\n        }\n        vector<string> result(res.begin(), res.end());\n        return result;\n    }\n};","compare_result":"11011110100111110100110000000111100101100011010010010000010001011","title_slug":"word-search-ii","has_notes":false}