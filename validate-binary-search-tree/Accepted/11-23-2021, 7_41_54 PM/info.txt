{"id":591512709,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637676714,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/591512709/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n#if 0   \n    void inorder(TreeNode *root, queue<int> &q) {\n        if (!root)\n            return;\n        inorder(root->left, q);\n        q.push(root->val);\n        inorder(root->right, q);\n    } \n#endif\n    void inorder(TreeNode *root, queue<int> &q)\n    {\n        stack<TreeNode *> s;\n        TreeNode *curr = root;\n        while (curr != NULL || s.empty() == false)\n        {\n            while (curr !=  NULL)\n            {\n                s.push(curr);\n                curr = curr->left;\n            }\n            curr = s.top();\n            s.pop();\n            q.push(curr->val);\n            curr = curr->right;\n        }\n    }\n    bool isValidBST(TreeNode* root) {\n        if (!root)\n            return true;\n        queue<int> q;\n        inorder(root, q);\n        int node = q.front();\n        q.pop();\n        while(!q.empty()) {\n            if (node >= q.front())\n                return false;\n            node = q.front();\n            q.pop();\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}