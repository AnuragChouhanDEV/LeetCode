{"id":349398075,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1591367949,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/349398075/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool validate(TreeNode* root, int min, int max) {\n        if (!root)\n            return true;\n        else if (root->val >= max || root->val <= min)\n            return false;\n        else\n            return validate(root->left, min, root->val) && validate(root->right, root->val, max);;\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return validate(root, INT_MIN, INT_MAX);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111001111010101110011","title_slug":"validate-binary-search-tree","has_notes":false}