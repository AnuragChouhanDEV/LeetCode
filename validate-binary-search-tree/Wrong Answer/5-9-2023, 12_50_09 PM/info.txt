{"id":947098283,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683616809,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/947098283/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode* root, int left, int right) {\n        if (!root) return true;\n        if (root->val >= right || root->val <= left) return false;\n        return helper(root->left, left, root->val) && helper(root->right, root->val, right);\n    }\n    bool isValidBST(TreeNode* root) {\n        return helper(root, INT_MIN, INT_MAX);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111001111010101110011110","title_slug":"validate-binary-search-tree","has_notes":false}