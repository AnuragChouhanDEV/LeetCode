{"id":709879398,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1653840826,"status":10,"status_display":"Accepted","runtime":"155 ms","url":"/submissions/detail/709879398/","is_pending":"Not Pending","title":"Design Browser History","memory":"63.8 MB","code":"class BrowserHistory {\npublic:\n    string str;\n    BrowserHistory *next;\n    BrowserHistory *prev;\n    BrowserHistory *curr;\n    BrowserHistory *head;\n    int i = 0;\n    BrowserHistory(string homepage) {\n        this->str = homepage;\n        this->next = NULL;\n        this->prev = NULL;      \n        if (i == 0) {\n            head = this;\n            curr = head;\n            ++i;\n        }\n    }\n    void deleteNode(BrowserHistory** head_ref, BrowserHistory* del)\n    {\n        if (*head_ref == NULL || del == NULL)\n            return;\n        if (*head_ref == del)\n            *head_ref = del->next;\n        if (del->next != NULL)\n            del->next->prev = del->prev;\n        if (del->prev != NULL)\n            del->prev->next = del->next;\n        //free(del);\n        return;\n    }\n    void delete_all_nodes_after(BrowserHistory **head_ref) {\n        BrowserHistory* ptr = *head_ref;\n        BrowserHistory* next;\n        while (ptr != NULL) {\n            next = ptr->next;\n            deleteNode(head_ref, ptr);\n            ptr = next;\n        }\n    }\n    void insert_after(BrowserHistory *curr1, string url) {\n        if (curr1 == NULL)\n            return;\n        BrowserHistory* new_node = new BrowserHistory(url);\n        new_node->next = curr1->next;\n        curr1->next = new_node;\n        new_node->prev = curr1;\n    }\n    void visit(string url) {\n        delete_all_nodes_after(&curr->next);\n        insert_after(curr, url);\n        curr = curr->next;\n    }\n    string back(int steps) {\n        while (steps && curr != head) {\n            curr = curr->prev;\n            steps--;\n        }\n        return curr->str;\n    }\n    string forward(int steps) {\n        while (steps && curr->next != NULL) {\n            curr = curr->next;\n            steps--;\n        }\n        return curr->str;\n    }\n};\n\n/**\n * Your BrowserHistory object will be instantiated and called as such:\n * BrowserHistory* obj = new BrowserHistory(homepage);\n * obj->visit(url);\n * string param_2 = obj->back(steps);\n * string param_3 = obj->forward(steps);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-browser-history","has_notes":false}