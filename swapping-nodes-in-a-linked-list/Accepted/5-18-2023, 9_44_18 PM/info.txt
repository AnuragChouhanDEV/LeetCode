{"id":952821180,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1684426458,"status":10,"status_display":"Accepted","runtime":"673 ms","url":"/submissions/detail/952821180/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n\n    ListNode* swapNodes(ListNode* head, int k) {\n        ListNode* sptr = head;\n        ListNode* fptr = head;\n        int i = 1;\n        while (i < k && fptr) {\n\n            fptr = fptr->next;\n            ++i;\n        }\n        ListNode* first = fptr;\n        while (fptr->next) {\n            sptr = sptr->next;\n            fptr = fptr->next;\n        }\n        swap(sptr->val, first->val);\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false}