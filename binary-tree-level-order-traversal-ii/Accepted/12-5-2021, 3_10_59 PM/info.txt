{"id":597251241,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638697259,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/597251241/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        if (!root)\n            return {};\n        vector<vector<int>> stack;\n        queue<TreeNode *> q;\n        q.push(root);\n        while (!q.empty()) {\n            int count = q.size();\n            vector<int> tmp;\n            for (int i = 0; i < count; ++i) {\n                TreeNode *Node = q.front();\n                q.pop();\n                tmp.push_back(Node->val);\n                if (Node->left)\n                    q.push(Node->left);\n                if (Node->right)\n                    q.push(Node->right);\n            }\n            stack.push_back(tmp);\n        }\n        for (int i = 0, j = stack.size()-1; i < j; ++i, --j) {\n            swap(stack[i],stack[j]);\n        }\n        return stack;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false}