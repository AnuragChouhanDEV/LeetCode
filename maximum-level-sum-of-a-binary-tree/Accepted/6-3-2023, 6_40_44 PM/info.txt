{"id":962980237,"lang":"cpp","lang_name":"C++","time":"6 days, 1 hour","timestamp":1685797844,"status":10,"status_display":"Accepted","runtime":"231 ms","url":"/submissions/detail/962980237/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        int max_level = INT_MIN;\n        int level = 0;\n        int max_sum = INT_MIN;\n        queue<TreeNode*> q;\n        q.push(root);\n        while (!q.empty()) {\n            int size = q.size();\n            int local_sum = 0;\n            level += 1;\n\n            for (int i = 0; i < size; ++i) {\n                TreeNode* tmp = q.front();\n                q.pop();\n\n                local_sum += tmp->val;\n                if (tmp->left) q.push(tmp->left);\n                if (tmp->right) q.push(tmp->right);\n            }\n            if (local_sum > max_sum) {\n                max_sum = local_sum;\n                max_level = level;\n            }\n        }\n        return max_level;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false}