{"id":883833535,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1674493458,"status":10,"status_display":"Accepted","runtime":"181 ms","url":"/submissions/detail/883833535/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.7 MB","code":"class Solution {\npublic:\n    bool is_palindrome(string s, int start, int end) {\n        while (start < end) {\n            if (s[start++] != s[end--])\n                return false;\n        }\n        return true;\n    }\n    void recur(string s, vector<string> &temp, int idx, vector<vector<string>> &ans) {\n        if (idx == s.size()) {\n            ans.push_back(temp);\n            return;\n        }\n        for (int i = idx; i < s.size(); ++i) {\n            if (is_palindrome(s, idx, i)) {\n                temp.push_back(s.substr(idx, i-idx+1));\n                recur(s, temp, i+1, ans);\n                temp.pop_back();\n            }\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        vector<string> temp;\n        vector<vector<string>> ans;\n        recur(s, temp, 0, ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}