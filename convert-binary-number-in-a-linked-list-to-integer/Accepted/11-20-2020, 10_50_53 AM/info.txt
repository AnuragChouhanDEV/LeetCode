{"id":422220047,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1605849653,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/422220047/","is_pending":"Not Pending","title":"Convert Binary Number in a Linked List to Integer","memory":"8.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    int itr;\n    int sol;\n    static int power(int x, int y) \n    { \n        if (y == 0) \n            return 1; \n        else if (y % 2 == 0) \n            return power(x, y / 2) * power(x, y / 2); \n        else\n            return x * power(x, y / 2) * power(x, y / 2); \n    }\n    int getDecimalValue_int(ListNode* head) {\n        if (head->next == NULL) {\n            return head->val * pow(2, itr);\n        }\n        sol += getDecimalValue_int(head->next);\n        \n        itr++;\n        return head->val * pow(2, itr);\n    }\n    \npublic:\n    int getDecimalValue(ListNode* head) {\n        if (head == NULL)\n            return 0;\n        sol += getDecimalValue_int(head);\n        return sol;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-binary-number-in-a-linked-list-to-integer","has_notes":false}