{"id":590357067,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637474119,"status":10,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/590357067/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"123.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        stack<ListNode *> st;\n        ListNode *sp = head;\n        ListNode *fp = head;\n        while(fp && fp->next) {\n            st.push(sp);\n            sp = sp->next;\n            fp = fp->next->next;\n        }\n        if (fp) {\n            //cout << \"popped here \" << endl;\n            //st.pop();\n            sp = sp->next;\n        }\n        while (sp) {\n            if (!st.empty()) {\n                if (sp->val != st.top()->val) {\n                    //cout << sp->val << \" \" << st.top()->val << endl;\n                    return false;\n                }\n            }\n            st.pop();\n            sp = sp->next;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}