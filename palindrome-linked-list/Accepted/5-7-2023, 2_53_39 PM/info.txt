{"id":945980565,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683451419,"status":10,"status_display":"Accepted","runtime":"291 ms","url":"/submissions/detail/945980565/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"123.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        stack<ListNode *> st;\n        ListNode *first = head;\n        ListNode *second = head;\n\n        while (first && first->next) {\n            st.push(second);\n            second = second->next;\n            first = first->next->next;\n        }\n        if (first && !first->next)\n            second = second->next;\n        while (!st.empty() && second) {\n            ListNode *tmp = st.top();\n            st.pop();\n            if (tmp->val != second->val)\n                return false;\n            second = second->next;\n        }\n        if (st.empty() && second == NULL)\n            return true;\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}