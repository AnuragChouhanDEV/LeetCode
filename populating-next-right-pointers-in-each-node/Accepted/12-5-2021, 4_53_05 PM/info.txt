{"id":597279596,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638703385,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/597279596/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"17 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        if (!root)\n            return NULL;\n        queue<Node *> q;\n        q.push(root);\n        while (!q.empty()) {\n            int count = q.size();\n            Node *prev = NULL;\n            for (int i = 0; i < count; ++i) {\n                Node *curr = q.front();\n                q.pop();\n                if (prev)\n                    prev->next = curr;\n                if (curr->left)\n                    q.push(curr->left);\n                if (curr->right)\n                    q.push(curr->right);\n                prev = curr;\n            }\n        }\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node","has_notes":false}