{"id":389498444,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1598978293,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/389498444/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void swap(TreeNode* curr) {\n        if (!curr)\n            return;\n        swap(curr->left);\n        swap(curr->right);\n        TreeNode* tmp = curr->left;\n        curr->left = curr->right;\n        curr->right = tmp;\n    }\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        swap(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false}