{"id":597257993,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638698692,"status":10,"status_display":"Accepted","runtime":"244 ms","url":"/submissions/detail/597257993/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"146.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (root == NULL)\n            return 0;\n        if (root->left == NULL && root->right == NULL)\n            return 1;\n        int l = INT_MAX, r = INT_MAX;\n        if (root->left)\n            l = minDepth(root->left);\n        if (root->right)\n            r =  minDepth(root->right);\n        return min(l , r) + 1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false}