{"id":597257183,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638698511,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/597257183/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (!root)\n            return 0;\n        return (1 + min(minDepth(root->left), minDepth(root->right)));\n    }\n};","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree","has_notes":false}