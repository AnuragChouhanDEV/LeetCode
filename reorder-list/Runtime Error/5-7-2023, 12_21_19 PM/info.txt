{"id":945918117,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683442279,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/945918117/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int length(ListNode* head) {\n        int len = 0;\n        ListNode* tmp = head;\n        while (tmp) {\n            len++;\n            tmp = tmp->next;\n        }\n        return len;\n    } \n    void reorderList(ListNode* head) {\n        stack<ListNode*> st;\n        int len = length(head);\n        int itr = len/2;\n        ListNode* tmp = head;\n        ListNode* curr = head;\n        ListNode* prev = NULL;\n        ListNode* next = NULL;\n        while (tmp) {\n            if (itr) {\n                itr--;\n                prev = tmp;\n                tmp = tmp->next;\n                continue;\n            }\n            st.push(tmp);\n            tmp = tmp->next;\n        }\n        prev->next = NULL;\n        while (curr && !st.empty()) {\n            next = curr->next;\n            ListNode* tmp = st.top();\n            st.pop();\n            curr->next = tmp;\n            tmp->next = next;\n            if (!next)\n                prev = tmp;\n            curr = next;\n        }\n        if (!st.empty()) {\n            ListNode* tmp = st.top();\n            st.pop();\n            tmp->next = NULL;\n            prev->next = tmp;\n        }\n    }\n};","compare_result":"110000000000","title_slug":"reorder-list","has_notes":false}