{"id":589959204,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637404866,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/589959204/","is_pending":"Not Pending","title":"Reorder List","memory":"18.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *reverse(ListNode *head) {\n        if (!head || !head->next)\n            return head;\n        ListNode *rest = reverse(head->next);\n        head->next->next = head;\n        head->next = NULL;\n        return rest;\n    }\n    void reorderList(ListNode* head) {\n        ListNode *slow = head;\n        ListNode *fast = slow->next;\n        while (fast && fast->next) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n        ListNode* head1 = head;\n        ListNode* head2 = slow->next;\n        slow->next = NULL;\n        head2 = reverse(head2);\n        head = new ListNode(0);\n        ListNode* curr = head;\n        while (head1 || head2) {\n            if (head1) {\n                curr->next = head1;\n                curr = curr->next;\n                head1 = head1->next;\n            }\n            if (head2) {\n                curr->next = head2;\n                curr = curr->next;\n                head2 = head2->next;\n            }\n        }\n        head = head->next;\n    }\n};","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false}