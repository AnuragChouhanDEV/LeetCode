{"id":952245848,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684347206,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/952245848/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"6.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> generateMatrix(int n) {\n        vector<vector<int>> matrix(n,vector<int>(n,1));\n        int R = n;\n        int C = n;\n        int i = 0;\n        int j = 0;\n        int k = 1;\n\n        while (i < R && j < C && k <= n*n) {\n            // keep i increase j from 0, i++;\n            for (int x = j; x < C && k <= n*n; ++x) {\n                matrix[i][x] = k++;\n            } i++;\n            \n            \n            // keep j increase i from i, j--;\n            for (int x = i; x < R && k <= n*n; ++x) {\n                matrix[x][C-1] = k++;\n            } C--;\n            \n            // keep i decrease j from last, i--;\n            for (int x = C-1; x >= j && k <= n*n; --x) {\n                matrix[R-1][x] = k++;\n            } R--;\n            \n            // keep j decrease i from current, j++;\n            for (int x = R-1; x >= i && k <= n*n; --x) {\n                matrix[x][j] = k++;\n            } j++;\n\n            //cout << \"i \" << i << \" R \" << R << \" j \" << j << \" C \" << C << endl;\n\n        }\n        return matrix;\n    }\n};","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii","has_notes":false}