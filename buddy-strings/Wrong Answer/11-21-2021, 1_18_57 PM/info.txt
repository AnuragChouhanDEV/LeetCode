{"id":590399169,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637480937,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/590399169/","is_pending":"Not Pending","title":"Buddy Strings","memory":"N/A","code":"class Solution {\npublic:\n    bool isPalindrome(string S)\n    {\n        string P = S;\n        reverse(P.begin(), P.end());\n        if (S == P) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    bool buddyStrings(string s, string goal) {\n        int idx1 = -1;\n        int idx2 = 0;\n        int i;\n        if(isPalindrome(goal))\n            return true;\n        for (i = 0; i < s.size(); ++i) {\n            if (s[i] != goal[i]) {\n                if (idx1 == -1) {\n                    idx1 = i;\n                } else {\n                    idx2 = i;\n                    break;\n                }\n            }\n        }\n        if (i == s.size() && idx1 == -1)\n            return false;\n        swap(s[idx1], s[idx2]);\n        for (int i = 0; i < s.size(); ++i) {\n            if (s[i] != goal[i])\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111010100101011111111111","title_slug":"buddy-strings","has_notes":false}