{"id":962970803,"lang":"cpp","lang_name":"C++","time":"6 days, 2 hours","timestamp":1685796625,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/962970803/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        ListNode *prev = NULL;\n        ListNode *curr = head;\n        ListNode *fp = head;\n        while (fp && fp->next) {\n            prev = curr;\n            curr = curr->next;\n            fp = fp->next->next;\n        }\n        if (prev == head) {\n            prev->next = NULL;\n        } else {\n            ListNode *next = prev->next->next;\n            prev->next = next;\n        }\n        return head;\n    }\n};","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}