{"id":598862503,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638971505,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/598862503/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"12.3 MB","code":"class Solution {\npublic:\n    vector<int> find_border(int id) {\n        vector<int> res(2,0);\n        if (id < 3) {\n            res[0] = 0;\n            res[1] = 2;\n        } else if (id < 6) {\n            res[0] = 3;\n            res[1] = 5;\n        } else {\n            res[0] = 6;\n            res[1] = 8;\n        }\n        return res;\n    }\n    bool is_valid(vector<vector<char>>& board, int row, int col, char ch) {\n        for (int i = 0; i < 9; ++i) {\n            if (board[i][col] == ch)\n                return false;\n            if (board[row][i] == ch)\n                return false;\n        }\n        //cout << \"here 4\" << endl;\n        vector<int> row_border = find_border(row);\n        vector<int> col_border = find_border(col);\n        //cout << \"here 5\" << row_border[0] << \" \" << row_border[1] << endl;\n        for (int i = row_border[0]; i <= row_border[1]; ++i) {\n            for (int j = col_border[0]; j <= col_border[1]; ++j) {\n                if (board[i][j] == ch)\n                    return false;\n            }\n        }\n        return true;\n    }\n    bool dfs(vector<vector<char>>& board, int row, int col) {\n        if (col == 9) {\n            col = 0;\n            row += 1;\n        }\n        if (row == 9)\n            return true;\n        if (board[row][col] != '.')\n            return dfs(board, row, col+1);\n        \n        for (char i = '1'; i <= '9'; ++i) {\n            if (!is_valid(board, row, col, i))\n                continue;\n            //cout << \"here 2\" << endl;\n            board[row][col] = i;\n            if (dfs(board, row, col+1))\n                return true;\n            //cout << \"here 3\" << endl;\n            board[row][col] = '.';\n        }\n        return false;\n    }\n    void solveSudoku(vector<vector<char>>& board) {\n        dfs(board, 0,0);       \n    }\n};","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false}