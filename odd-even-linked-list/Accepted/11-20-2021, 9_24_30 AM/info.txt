{"id":589832097,"lang":"cpp","lang_name":"C++","time":"1Â year, 6Â months","timestamp":1637380470,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/589832097/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if (!head || !head->next)\n            return head;\n        ListNode *odd = head;\n        ListNode *even = head->next;\n        ListNode *even_head = even;\n        while(1) {\n            if (!odd || !even || !even->next) {\n                odd->next = even_head;\n                break;\n            }\n            odd->next = even->next;\n            odd = even->next;\n            if (odd->next == NULL) {\n                even->next = NULL;\n                odd->next = even_head;\n                break;\n            }\n            even->next = odd->next;\n            even = odd->next;\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false}