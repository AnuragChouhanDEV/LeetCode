{"id":597264110,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638699968,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/597264110/","is_pending":"Not Pending","title":"Path Sum II","memory":"19.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void path_sum(TreeNode *root, int targetSum, vector<int> &vec, vector<vector<int>> &res) {\n        if (!root)\n            return;\n        int sum = targetSum - root->val;\n        vec.push_back(root->val);\n        if (root->left)\n            path_sum(root->left, sum, vec, res);\n        if (root->right)\n            path_sum(root->right, sum, vec, res);\n        if (sum == 0 && !root->left && !root->right) {\n            res.push_back(vec);\n        }\n        vec.pop_back();\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<int> vec;\n        vector<vector<int>> res;\n        path_sum(root, targetSum, vec, res);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}