{"id":962962282,"lang":"cpp","lang_name":"C++","time":"6 days, 2 hours","timestamp":1685795517,"status":10,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/962962282/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"94.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxi = 0;\n    void _lzz(TreeNode* root, bool left, int len) {\n        if (!root) return;\n        maxi = max(maxi, len);\n        _lzz(root->left, 0, left ? len + 1 : 1);\n        _lzz(root->right, 1, left ? 1 : len + 1);\n    }\n    int longestZigZag(TreeNode* root) {\n        if (!root) return 0;\n        bool dir = true;\n        \n        _lzz(root, 0, 0);\n        _lzz(root, 1, 0);\n        return maxi;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false}