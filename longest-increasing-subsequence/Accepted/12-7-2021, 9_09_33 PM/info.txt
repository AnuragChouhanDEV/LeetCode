{"id":598381224,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638891573,"status":10,"status_display":"Accepted","runtime":"433 ms","url":"/submissions/detail/598381224/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        if (nums.size() <= 1)\n            return nums.size();\n        vector<int> dp(nums.size(), 1);\n        int maxi = INT_MIN;\n        for (int i = 1; i < nums.size(); ++i) {\n            for (int j = 0; j < i; ++j) {\n                if (nums[j] < nums[i]) {\n                    dp[i] = max(dp[i], dp[j]+1);\n                    //cout << dp[i] << \" \" << dp[j]+1 << endl;\n                }\n            }\n            maxi = max(maxi, dp[i]);\n        }\n        return maxi;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false}