{"id":598245637,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638865650,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/598245637/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int min_size = INT_MAX;\n        int start = 0;\n        int i = 0;\n        int sum = 0;\n        while (i < nums.size()) {\n            sum += nums[i];\n            //cout << sum << endl;\n             \n            while (target <= sum) {\n                //cout << target << \" \" << sum << endl;\n                if (target == sum) {\n                    min_size = min(min_size, i+1 - start);\n                }\n                sum -= nums[start++];\n            }\n            ++i;\n        }\n        return min_size;\n    }\n};","compare_result":"1100101001110001000","title_slug":"minimum-size-subarray-sum","has_notes":false}