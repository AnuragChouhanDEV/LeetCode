{"id":589949865,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1637402645,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/589949865/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if (!head || !head->next)\n            return head;\n        ListNode *sp = head;\n        ListNode *fp = head->next;\n        while (fp && fp->next) {\n            if (sp == fp)\n                break;\n            sp = sp->next;\n            fp = fp->next->next;\n        }\n        sp = head;\n        while (fp->next != sp) {\n            fp = fp->next;\n            sp = sp->next;\n        }\n        return fp->next;\n    }\n};","compare_result":"1101100000000000","title_slug":"linked-list-cycle-ii","has_notes":false}