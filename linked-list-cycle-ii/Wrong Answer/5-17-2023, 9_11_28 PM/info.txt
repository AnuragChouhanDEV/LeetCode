{"id":952154263,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684338088,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/952154263/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if (!head) return NULL;\n        ListNode *sptr = head;\n        ListNode *fptr = head->next;\n        ListNode *prev = NULL;\n        if (head == head->next) return head;\n        while (fptr && fptr->next) {\n            if (sptr == fptr) return prev;\n            prev = sptr;\n            sptr = sptr->next;\n            fptr = fptr->next->next;\n        }\n        return prev;\n    }\n};","compare_result":"11111110000000001","title_slug":"linked-list-cycle-ii","has_notes":false}