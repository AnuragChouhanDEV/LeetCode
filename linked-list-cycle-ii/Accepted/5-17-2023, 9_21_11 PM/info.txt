{"id":952159723,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1684338671,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/952159723/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if (!head) return NULL;\n        ListNode *sptr = head;\n        ListNode *fptr = head;\n\n        if (head == head->next) return head;\n        while (fptr && fptr->next) {\n                        sptr = sptr->next;\n            fptr = fptr->next->next;\n            if (sptr == fptr) {\n                sptr=head;\n                while (sptr != fptr) {\n                    sptr=sptr->next;\n                    fptr=fptr->next;\n                }\n                return sptr;\n            }\n\n        }\n        return NULL;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false}