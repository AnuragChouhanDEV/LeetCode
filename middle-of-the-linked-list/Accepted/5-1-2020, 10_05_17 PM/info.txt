{"id":332791086,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1588350917,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/332791086/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"6.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        struct ListNode *fastptr = head;\n        struct ListNode *slowptr = head;\n        \n        while (fastptr != NULL && fastptr->next != NULL) {\n            slowptr = slowptr->next;\n            fastptr = fastptr->next->next;\n        }\n        return slowptr;\n        \n    }\n};","compare_result":"111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}