{"id":947818764,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1683721302,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/947818764/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode* root) {\n        if (!root)\n            return 0;\n        int left = helper(root->left);\n        int right = helper(root->right);\n        int diff = abs(left-right);\n        if (diff > 1 || left == -1 || right == -1)\n            return -1;\n        return 1 + max(left,right);\n    }\n    bool isBalanced(TreeNode* root) {\n        if (!root)\n            return true;\n        return helper(root) != -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false}