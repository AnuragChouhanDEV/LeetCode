{"id":597256117,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1638698258,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/597256117/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool is_balanced_util(TreeNode *root, int &height) {\n        if (!root)\n            return true;\n        int lh = 0;\n        int rh = 0;\n        bool l = is_balanced_util(root->left, lh);\n        bool r = is_balanced_util(root->right, rh);\n        if (abs(lh-rh) > 1)\n            return false;\n        height = 1 + max(lh,rh);\n        return l && r;\n    }\n    bool isBalanced(TreeNode* root) {\n        int height = 0;\n        return is_balanced_util(root, height);        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false}